import argparse

import yaml

# Dataset subset to code
SET2CODE = {
    "chinese_simplified": "zh", 
    "bengali": "bn", 
    "french": "fr", 
    "japanese": "ja", 
    "russian": "ru", 
    "spanish": "es", 
    "swahili": "sw", 
    "telugu": "te", 
    "thai": "th"
}
# Dataset subset to name
SET2NAME = {
    "chinese_simplified": "Simplified Chinese", 
    "bengali": "Bengali", 
    "french": "French", 
    "japanese": "Japanese", 
    "russian": "Russian", 
    "spanish": "Spanish", 
    "swahili": "Swahili", 
    "telugu": "Telugu", 
    "thai": "Thai"
}

def gen_lang_yamls(output_dir: str, overwrite: bool) -> None:
    """
    Generate a yaml file for each language.

    :param output_dir: The directory to output the files to.
    :param overwrite: Whether to overwrite files if they already exist.
    """
    err = []
    for subset, code in SET2CODE.items():
        try:
            file_name = f"xlsum_{code}.yaml"
            langname = SET2NAME[subset]
            with open(
                f"{output_dir}/{file_name}",
                "w" if overwrite else "x",
                encoding="utf8",
            ) as f:
                f.write("# Generated by xlsum.py\n")
                yaml.dump(
                    {
                        "include": "xlsum_common_yaml",
                        "dataset_name": subset,
                        "task": f"xlsum-{code}",
                        "doc_to_text": f"Summarize the text using {langname}: " + "{{text}}"
                    },
                    f,
                )
        except FileExistsError:
            err.append(file_name)

        if len(err) > 0:
            raise FileExistsError(
                "Files were not created because they already exist (use --overwrite flag):"
                f" {', '.join(err)}"
            )


def main() -> None:
    """Parse CLI args and generate language-specific yaml files."""
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--overwrite",
        default=False,
        action="store_true",
        help="Overwrite files if they already exist",
    )
    parser.add_argument(
        "--output-dir", default=".", help="Directory to write yaml files to"
    )
    args = parser.parse_args()

    gen_lang_yamls(output_dir=args.output_dir, overwrite=args.overwrite)


if __name__ == "__main__":
    main()
